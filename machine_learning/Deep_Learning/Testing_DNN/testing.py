from flask import Flask, render_template, request
import pandas as pd
import numpy as np
from sklearn.preprocessing import LabelEncoder, StandardScaler
from keras.models import load_model

app = Flask(__name__, template_folder="/home/heteshgcp")

@app.route('/')
def index():
    return render_template('index1.html')

@app.route('/upload', methods=['GET','POST'])
def predict():
    file = request.files["file"]
    data = pd.read_csv(file, sep='|')
    x = data.drop(['Name', 'md5', 'legitimate'], axis=1).values
    names = data['Name'].values
    new_x = LabelEncoder().fit_transform(x.ravel()).reshape(*x.shape)
    reshaped_x = new_x.reshape((new_x.shape[0], -1))
    norm_x = StandardScaler().fit_transform(reshaped_x)

    model = load_model('best_weights_1.h5')

    predictions = model.predict(norm_x)
    rounded_predictions = np.round(predictions)

    legit_files = []
    malware_files = []
    for i in range(len(rounded_predictions)):
        if rounded_predictions[i] == 0:
            malware_files.append(names[i])
        else:
            legit_files.append(names[i])

    return render_template('predictions.html', malware_files=malware_files, legit_files=legit_files)

if __name__ == "__main__":
    app.run(host='0.0.0.0', port=5000, debug=True)
