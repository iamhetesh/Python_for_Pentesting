import sys
import socket
import os
import time
import requests

def generate_service_names():
    service_names = {}
    for port in range(1, 1001):   
        try:
            service_name = socket.getservbyport(port)
            service_names[port] = service_name
        except OSError:
            pass
    return service_names

SERVICE_NAMES = generate_service_names()

def port_scanner(target, start_port, end_port):
    open_ports = []
    try:
        for port in range(start_port, end_port + 1):
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            socket.setdefaulttimeout(1)
            result = s.connect_ex((target, port))
            if result == 0:
                open_ports.append(port)
                print(f"Port {port} is open")
            else:
                print(f"Port {port} is closed")
                s.close()
                time.sleep(0.2)
    
    except socket.gaierror:
        print("Invalid target address. Please provide a valid IP address.")
        sys.exit(1)
    
    except KeyboardInterrupt:
        print("\nPort scanning interrupted.")
        sys.exit(1)
    except socket.error:
        print("Socket creation failed. Unable to connect to the target.")
        sys.exit(1)
    
    if open_ports:
        print("\nSummary: Open Ports")
        print("---------------------")
        for port in open_ports:
            svc = SERVICE_NAMES.get(port)
            print(f"Port {port} ({svc}) is open")
    else:
        print("\nNo open ports found.")

def main():
    target = input("Enter the target IP: ")
    start_port = int(input("Enter the starting port number: "))
    end_port = int(input("Enter the last port number: "))
    print(f"\nScanning ports on {target}...\n")
    port_scanner(target, start_port, end_port)

if __name__ == "__main__":
    main()
